"use strict";app.directive("jxbBindCompiledHtml",function($compile){return{template:" <div></div>",scope:{rawHtml:"=jxbBindCompiledHtml"},link:function(scope,elem,attrs){scope.$watch("rawHtml",function(value){if(value){var newElem=$compile($.parseHTML(value))(scope.$parent);elem.contents().remove(),elem.append(newElem)}})}}}),app.directive("bfAssertEquals",function(){return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ngModel){var isSame=function(value){var second=scope.$eval(attrs.bfAssertEquals);return value==second};ngModel.$parsers.push(function(value){return ngModel.$setValidity("same",isSame(value)),isSame(value)?value:void 0}),scope.$watch(function(){return scope.$eval(attrs.bfAssertEquals)},function(){ngModel.$setValidity("same",isSame(ngModel.$modelValue))})}}}),app.directive("uniqueAccount",function(httpService,$q){return{restrict:"A",require:"ngModel",link:function(scope,element,attr,ngModel){ngModel.$asyncValidators.uniqueAccount=function(modelValue,viewValue){return httpService.get("/app/checkAccount?account="+viewValue).then(function(response){return 3002!=response.data||$q.reject(response.data)})}}}}),app.directive("onFinishRender",function(){return{restrict:"A",link:function(scope,element,attr){scope.$last===!0&&element.ready(function(){var id=element.id;$("#"+id).remove()})}}}),app.directive("usernameValidator",["$log",function($log){return{restrict:"A",require:"ngModel",link:function($scope,$element,$attrs,$ngModelCtrl){var verifyRule=[/^\d+$/,/^[a-z]+$/,/^[A-Z]+$/],verify=function(input){return!(verifyRule[0].test(input)||verifyRule[1].test(input)||verifyRule[2].test(input))};$ngModelCtrl.$parsers.push(function(input){var validity=verify(input);$ngModelCtrl.$setValidity("defined",validity)}),$ngModelCtrl.$formatters.push(function(input){var validity=verify(input);$ngModelCtrl.$setValidity("defined",validity)})}}}]);